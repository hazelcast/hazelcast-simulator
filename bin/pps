#!/bin/bash


# Script comes from:
# https://www.xmodulo.com/measure-packets-per-second-throughput-high-speed-network-interface.html


INTERVAL="1"  # update interval in seconds

if [ -z "$1" ]; then
        echo
        echo usage: $0 network-interface [times]
        echo
        echo Examples:
        echo     $0 eth0
        echo     $0 eth0 10
        echo
        echo shows packets-per-second of a given interface a specified number of times or indefinitely
        exit
fi

if [[ ! -f "/sys/class/net/${1}/statistics/rx_packets" ]]; then
    echo /sys/class/net/$1/statistics/rx_packets does not exist! Aborting.
    exit 1
fi
if [[ ! -f "/sys/class/net/${1}/statistics/tx_packets" ]]; then
    echo /sys/class/net/$1/statistics/tx_packets does not exist! Aborting.
    exit 1
fi

IF=$1
times=0
times=$2

MEASURE_PPS_ALLOWANCE_EXCEEDED=FALSE
if hash ethtool 2>/dev/null ; then
    if ethtool -S ens5 | grep -q pps_allowance_exceeded ; then
        MEASURE_PPS_ALLOWANCE_EXCEEDED=TRUE
    fi
fi

for ((n=0;n<times||times==0;n++));
do
        R1=`cat /sys/class/net/$1/statistics/rx_packets`
        T1=`cat /sys/class/net/$1/statistics/tx_packets`
        if [[ $MEASURE_PPS_ALLOWANCE_EXCEEDED ]]; then
            PPS_EXCEEDED1=`ethtool -S ens5 | grep pps_allowance_exceeded | awk -F'pps_allowance_exceeded: ' '{print $2}'`
        fi
        sleep $INTERVAL
        R2=`cat /sys/class/net/$1/statistics/rx_packets`
        T2=`cat /sys/class/net/$1/statistics/tx_packets`
        if [[ $MEASURE_PPS_ALLOWANCE_EXCEEDED ]]; then
            PPS_EXCEEDED2=`ethtool -S ens5 | grep pps_allowance_exceeded | awk -F'pps_allowance_exceeded: ' '{print $2}'`
        fi
        TXPPS=`expr $T2 - $T1`
        RXPPS=`expr $R2 - $R1`
        if [[ $MEASURE_PPS_ALLOWANCE_EXCEEDED ]]; then
            PPS_EXCEEDED_INC=`expr $PPS_EXCEEDED2 - $PPS_EXCEEDED1`
            echo "TX $1: $TXPPS pkts/s RX $1: $RXPPS pkts/s pps_allowance_exceeded events/s $1: $PPS_EXCEEDED_INC"
        else
           echo "TX $1: $TXPPS pkts/s RX $1: $RXPPS pkts/s"
        fi
done
